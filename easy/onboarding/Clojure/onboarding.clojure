#_{:clj-kondo/ignore [:namespace-name-mismatch]}
(ns Player
  #_{:clj-kondo/ignore [:unused-namespace]}
  (:require [clojure.string :as str])
  (:gen-class))

; CodinGame planet is being attacked by slimy insectoid aliens.
; <---
; Hint: To protect the planet, you can implement the pseudo-code provided in the statement, below the player.

(defn output [msg] (println msg) (flush))
(defn debug [msg] (binding [*out* *err*] (println msg) (flush)))

#_{:clj-kondo/ignore [:unused-binding]}
(defn -main [& args]
  (while true
    (let [enemy1 (read-line) ; name of enemy 1
          dist1 (Integer/parseInt (read-line)) ; distance to enemy 1
          enemy2 (read-line) ; name of enemy 2
          dist2 (Integer/parseInt (read-line))] ; distance to enemy 2

      ; (debug "Debug messages...")

      ; Determine which enemy is closer and print its name
      (output (if (< dist1 dist2) enemy1 enemy2)))))